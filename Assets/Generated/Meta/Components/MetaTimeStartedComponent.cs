//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity timeStartedEntity { get { return GetGroup(MetaMatcher.TimeStarted).GetSingleEntity(); } }
    public Components.TimeStarted timeStarted { get { return timeStartedEntity.timeStarted; } }
    public System.DateTime TimeStarted { get { return timeStarted.Value; } }
    public bool hasTimeStarted { get { return timeStartedEntity != null; } }

    public MetaEntity SetTimeStarted(System.DateTime newValue) {
        if (hasTimeStarted) {
            throw new Entitas.EntitasException("Could not set TimeStarted!\n" + this + " already has an entity with Components.TimeStarted!",
                "You should check if the context already has a timeStartedEntity before setting it or use context.ReplaceTimeStarted().");
        }
        var entity = CreateEntity();
        entity.AddTimeStarted(newValue);
        return entity;
    }

    public void ReplaceTimeStarted(System.DateTime newValue) {
        var entity = timeStartedEntity;
        if (entity == null) {
            entity = SetTimeStarted(newValue);
        } else {
            entity.ReplaceTimeStarted(newValue);
        }
    }

    public void RemoveTimeStarted() {
        timeStartedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Components.TimeStarted timeStarted { get { return (Components.TimeStarted)GetComponent(MetaComponentsLookup.TimeStarted); } }
    public System.DateTime TimeStarted { get { return timeStarted.Value; } }
    public bool hasTimeStarted { get { return HasComponent(MetaComponentsLookup.TimeStarted); } }

    public MetaEntity AddTimeStarted(System.DateTime newValue) {
        var index = MetaComponentsLookup.TimeStarted;
        var component = (Components.TimeStarted)CreateComponent(index, typeof(Components.TimeStarted));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public MetaEntity ReplaceTimeStarted(System.DateTime newValue) {
        var index = MetaComponentsLookup.TimeStarted;
        var component = (Components.TimeStarted)CreateComponent(index, typeof(Components.TimeStarted));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public MetaEntity RemoveTimeStarted() {
        RemoveComponent(MetaComponentsLookup.TimeStarted);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherTimeStarted;

    public static Entitas.IMatcher<MetaEntity> TimeStarted {
        get {
            if (_matcherTimeStarted == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.TimeStarted);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherTimeStarted = matcher;
            }

            return _matcherTimeStarted;
        }
    }
}
