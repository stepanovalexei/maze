//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity secondsSpentEntity { get { return GetGroup(MetaMatcher.SecondsSpent).GetSingleEntity(); } }
    public Components.SecondsSpent secondsSpent { get { return secondsSpentEntity.secondsSpent; } }
    public float SecondsSpent { get { return secondsSpent.Value; } }
    public bool hasSecondsSpent { get { return secondsSpentEntity != null; } }

    public MetaEntity SetSecondsSpent(float newValue) {
        if (hasSecondsSpent) {
            throw new Entitas.EntitasException("Could not set SecondsSpent!\n" + this + " already has an entity with Components.SecondsSpent!",
                "You should check if the context already has a secondsSpentEntity before setting it or use context.ReplaceSecondsSpent().");
        }
        var entity = CreateEntity();
        entity.AddSecondsSpent(newValue);
        return entity;
    }

    public void ReplaceSecondsSpent(float newValue) {
        var entity = secondsSpentEntity;
        if (entity == null) {
            entity = SetSecondsSpent(newValue);
        } else {
            entity.ReplaceSecondsSpent(newValue);
        }
    }

    public void RemoveSecondsSpent() {
        secondsSpentEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Components.SecondsSpent secondsSpent { get { return (Components.SecondsSpent)GetComponent(MetaComponentsLookup.SecondsSpent); } }
    public float SecondsSpent { get { return secondsSpent.Value; } }
    public bool hasSecondsSpent { get { return HasComponent(MetaComponentsLookup.SecondsSpent); } }

    public MetaEntity AddSecondsSpent(float newValue) {
        var index = MetaComponentsLookup.SecondsSpent;
        var component = (Components.SecondsSpent)CreateComponent(index, typeof(Components.SecondsSpent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public MetaEntity ReplaceSecondsSpent(float newValue) {
        var index = MetaComponentsLookup.SecondsSpent;
        var component = (Components.SecondsSpent)CreateComponent(index, typeof(Components.SecondsSpent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public MetaEntity RemoveSecondsSpent() {
        RemoveComponent(MetaComponentsLookup.SecondsSpent);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherSecondsSpent;

    public static Entitas.IMatcher<MetaEntity> SecondsSpent {
        get {
            if (_matcherSecondsSpent == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.SecondsSpent);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherSecondsSpent = matcher;
            }

            return _matcherSecondsSpent;
        }
    }
}
