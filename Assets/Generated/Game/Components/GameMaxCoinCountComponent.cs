//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.MaxCoinCount maxCoinCount { get { return (Components.MaxCoinCount)GetComponent(GameComponentsLookup.MaxCoinCount); } }
    public int MaxCoinCount { get { return maxCoinCount.Value; } }
    public bool hasMaxCoinCount { get { return HasComponent(GameComponentsLookup.MaxCoinCount); } }

    public GameEntity AddMaxCoinCount(int newValue) {
        var index = GameComponentsLookup.MaxCoinCount;
        var component = (Components.MaxCoinCount)CreateComponent(index, typeof(Components.MaxCoinCount));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMaxCoinCount(int newValue) {
        var index = GameComponentsLookup.MaxCoinCount;
        var component = (Components.MaxCoinCount)CreateComponent(index, typeof(Components.MaxCoinCount));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMaxCoinCount() {
        RemoveComponent(GameComponentsLookup.MaxCoinCount);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.MaxCoinCount maxCoinCount { get { return (Components.MaxCoinCount)GetComponent(GameComponentsLookup.MaxCoinCount); } }
    public bool hasMaxCoinCount { get { return HasComponent(GameComponentsLookup.MaxCoinCount); } }

    public void AddMaxCoinCount(int newValue) {
        var index = GameComponentsLookup.MaxCoinCount;
        var component = (Components.MaxCoinCount)CreateComponent(index, typeof(Components.MaxCoinCount));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxCoinCount(int newValue) {
        var index = GameComponentsLookup.MaxCoinCount;
        var component = (Components.MaxCoinCount)CreateComponent(index, typeof(Components.MaxCoinCount));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxCoinCount() {
        RemoveComponent(GameComponentsLookup.MaxCoinCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMaxCoinCount;

    public static Entitas.IMatcher<GameEntity> MaxCoinCount {
        get {
            if (_matcherMaxCoinCount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxCoinCount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMaxCoinCount = matcher;
            }

            return _matcherMaxCoinCount;
        }
    }
}
