//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.PreviousPosition previousPosition { get { return (Components.PreviousPosition)GetComponent(GameComponentsLookup.PreviousPosition); } }
    public bool hasPreviousPosition { get { return HasComponent(GameComponentsLookup.PreviousPosition); } }

    public GameEntity AddPreviousPosition(UnityEngine.Vector3Int newValue) {
        var index = GameComponentsLookup.PreviousPosition;
        var component = (Components.PreviousPosition)CreateComponent(index, typeof(Components.PreviousPosition));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplacePreviousPosition(UnityEngine.Vector3Int newValue) {
        var index = GameComponentsLookup.PreviousPosition;
        var component = (Components.PreviousPosition)CreateComponent(index, typeof(Components.PreviousPosition));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemovePreviousPosition() {
        RemoveComponent(GameComponentsLookup.PreviousPosition);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPreviousPosition;

    public static Entitas.IMatcher<GameEntity> PreviousPosition {
        get {
            if (_matcherPreviousPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PreviousPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPreviousPosition = matcher;
            }

            return _matcherPreviousPosition;
        }
    }
}
