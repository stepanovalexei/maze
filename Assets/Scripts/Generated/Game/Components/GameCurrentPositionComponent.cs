//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.CurrentPosition currentPosition { get { return (Components.CurrentPosition)GetComponent(GameComponentsLookup.CurrentPosition); } }
    public bool hasCurrentPosition { get { return HasComponent(GameComponentsLookup.CurrentPosition); } }

    public GameEntity AddCurrentPosition(UnityEngine.Vector3Int newValue) {
        var index = GameComponentsLookup.CurrentPosition;
        var component = (Components.CurrentPosition)CreateComponent(index, typeof(Components.CurrentPosition));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCurrentPosition(UnityEngine.Vector3Int newValue) {
        var index = GameComponentsLookup.CurrentPosition;
        var component = (Components.CurrentPosition)CreateComponent(index, typeof(Components.CurrentPosition));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCurrentPosition() {
        RemoveComponent(GameComponentsLookup.CurrentPosition);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentPosition;

    public static Entitas.IMatcher<GameEntity> CurrentPosition {
        get {
            if (_matcherCurrentPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentPosition = matcher;
            }

            return _matcherCurrentPosition;
        }
    }
}
